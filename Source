/*This is the SPRING 2017 TERM PROJECT
created by:*/
#include <iostream>
#include <string>
#include <iomanip>
#include <fstream>
using namespace std;
//Function Prototypes
void menu1();
void menu2();
void openFileExist();
void openFileNew();
void quitProgram();
void substitute();
void copy();
void locate();
void delet();
void move();
void type();
void paste();
void insert();
void replace();
//Global variables
string lineData[100] = { "" }; //Array indexes are 0-99
int currentLine = 0; //Current line 0-99 to correspond with the array

int main ()
{
	lineData[3] = "test"; //Entered a test line... When using the move function this will be entering line 4

	int men1choice,
		men2status = 1,
		men1status = 1;

	char men2choice;//menu choice/status variables
	cout << "Welcome to the word editor. " <<endl << endl; //Beginning welcome message

	while (men1status != 0)
	{
		menu1();//call to menu1

		cin >> men1choice; //user input menu choice
		while (men1choice != 1 && men1choice != 2 && men1choice != 3) //Makes sure menu choice is within range.
		{
			static int flag = 0;
			cout << "\aERROR: Please enter a valid option. ";
			cin >> men1choice;
			flag++;
			if (flag > 10)
			{
				cout << endl << "\a\a\aERROR:Program failiure. Please restart the program. "; //Bug fix to prevent infinite loop when character is entered
				exit(0);
			}
		}
		//Initiates appropriate call to function based upon menu 1 choice
		if (men1choice == 1)
			openFileExist();	
		else if (men1choice == 2)
				openFileNew();
		else if (men1choice == 3)
		{
				quitProgram();
				men2choice = 0;
		}


		//Assuming user did not quit program with choice 3
		do
		{
			menu2(); //displays menu 2
			cin >> men2choice;
			//Range check *ADD*
			switch (men2choice)
			{
				case 's':
				case 'S': substitute();
					break;
				case 'c':
				case 'C': copy();
					break;
				case 'l':
				case 'L': locate();
					break;
				case 'D':
				case 'd': delet();
				break;
				case 'm':
				case 'M': move();
					break;
				case 't':
				case 'T': type();
					break;
				case 'p':
				case 'P': paste();
					break;
				case 'i': 
				case 'I': insert();
					break;
				case 'r':
				case 'R': replace();
					break;
				case 'q':
				case 'Q': quitProgram();
					men2status = 0;		  
					break;
				default: cout << "Please Enter a valid Character. ";
			}
		}while (men2status != 0);
	}
}

void substitute ()
{
	cout <<"substitute function\n";
}
void copy ()
{
	cout << "copy function\n";
}
void locate ()
{
	cout << "Locate function\n";
}
void delet ()
{
	cout << "Delete function \n";
}
void move()
{
	//Prompt the user to enter a line number between 1-100... (0-99 in the array)
	int lineChoice;
	cout << "Move function\nEnter a line number 1-100: ";
	cin >> lineChoice;
	if (lineChoice >= 1 && lineChoice <= 100) //If the user enters a VALID line number
	{
		cout << "----------------" << endl;
		cout << lineData[lineChoice-1] << endl; //Print the line number of the user's choice... (-1 as the array is from 0-99)
		cout << "----------------";
		currentLine = lineChoice-1; //Set the currentLine to the user's choice
	}
	else //If the user enters an INVALID line number
	{
		cout << endl << "Invalid line number" << endl;
	}	
}
void type()
{
	cout << "type function\n";
}
void paste ()
{
	cout << "paste function\n";
}
void insert ()
{
	cout << "Insert function\n";
}
void replace()
{
	cout << "Replace function\n";
}






void openFileExist()
{
	cout << "open existing File function\n";
}
void openFileNew()
{
	cout << "open new file function\n";
}
void quitProgram()
{
	cout << "Quit Program function. will be loaded function.\n ";
	exit(1);
}
void menu1 ()
{
	cout << "Please Choose an option by entering a number: \n" << endl;
	cout << "1. Open an existing file " << endl;
	cout << "2. Open a new file " << endl;
	cout << "3. Quit" << endl;
}

void menu2()
{
	cout << endl << "What would you like to do? \nPlease enter a";
	cout << " character for your choice: " << endl << endl;
	cout << setw(40) << left << "S: Substitute/oldstring/newstring" << "C: Copy" << endl;
	cout << setw(40) << "L: Locate/String" << "D: Delete" << endl;
	cout << setw(40) << "M: Move" << "T: Type" << endl;
	cout << setw(40) << "P: Paste" << "I: Insert" << endl;
	cout << setw(40) << "R: Replace" << "Q: Quit" << endl;
}


		
